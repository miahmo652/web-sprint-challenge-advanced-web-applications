{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miahm\\\\Lambdaprojects\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // Private Route requirements:\n// 1. It has the same API as <Route />\n// 2. It renders a <Route /> and passes all the props to it\n// 3. It checks if the user is authenticated. If they are, render the component passed in as a prop. Otherwise, redirect to /login\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (localStorage.getItem(\"token\")) {\n        // if the token is in localStorage, render the given component\n        return React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }));\n      } else {\n        // redirect to login\n        console.log(\"redirecting!\");\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/Miahm/Lambdaprojects/web-sprint-challenge-advanced-web-applications/client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","props","localStorage","getItem","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf,UAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC;AACA,eAAO,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAHD,MAGO;AACL;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAeD,CAhBD;;AAkBA,eAAeR,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// Private Route requirements:\r\n// 1. It has the same API as <Route />\r\n// 2. It renders a <Route /> and passes all the props to it\r\n// 3. It checks if the user is authenticated. If they are, render the component passed in as a prop. Otherwise, redirect to /login\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (localStorage.getItem(\"token\")) {\r\n          // if the token is in localStorage, render the given component\r\n          return <Component {...props} />;\r\n        } else {\r\n          // redirect to login\r\n          console.log(\"redirecting!\");\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}